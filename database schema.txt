Messaging board: 

landingpage_database: 


Board table: 

	id					(integer key)
	name				(varchar 256)
	imageheader			(varchar) [URL of image]
	shortname			(varchar) 
	description			(text)
	creator				(1 to 1 user_id)
	board_post_count	(integer)
	board_reply_count	(integer)
	
TODO: create database table linking the boards with the threads
TODO: create database table linking the boards with the moderators

user table: 

	id					(primary key integer)
	username			(varchar)
	password			(varchar)
	ip_address			(varchar)
	image_header		(varchar)
	is_banned			(integer) [1 = banned, 0 = not banned]
	mod_of				(1 to many board_database_id)
	moderator_type		(integer) [0 = superadmin, 1 = regular account]
	creation_timestamp	(timestamp)
	
TODO: create database table linking the user to the boards they're moderating

comment table: 

	post_number			(primary key integer of the post number in the thread)
	comment_UUID		(UUID)
	thread UUID			(UUID)
	poster_id			(1 to 1 user_id)
	replies				(1 to 1000 comment_id)
	replied_to			(1 to many comment_id)
	post				(text)
	timestamp			(date_timestamp)
	tag					(string optional identifier)

pools table:

	id					(primary key integer of the post number in the thread)
	pool_uuid			(varchar(36))
	pool_name			(varchar)
	thread_text			(text)
	thread_poster		(1 to 1 user_id)
	thread_timestamp	timestamp
	
TODO: create database table for pools replies
TODO: create database table that holds all the images for the person that started the pools thread


threads table:

	id					(primary key integer of the post number in the thread)
	thread_name			(varchar)
	thread_text			(text)
	thread_poster		(1 to 1 user_id)
	thread_replies		(1 to many)
	thread_images		(1 to many)
	thread_timestamp	timestamp
	thread_UUID			UUID
	
TODO: create database table for thread replies.
bans table:

	id 				(primary key integer)
	ip_address		(varchar)
	username		(1 to 1 user_id)
	banner			(1 to 1 user_id)
	ban_end			(timestamp)
	ban_begin		(timestamp)
	ban_reason		(text)
